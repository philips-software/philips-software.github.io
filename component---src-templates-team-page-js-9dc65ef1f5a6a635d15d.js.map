{"version":3,"file":"component---src-templates-team-page-js-9dc65ef1f5a6a635d15d.js","mappings":"mMA0BIA,EAAmB,CAAC,QAAS,QAAS,UAAW,SAAU,OAC3DC,EAAyB,cAAiB,SAAmBC,EAAOC,GACtE,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAmBL,EAAMM,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAQR,EAAMQ,MACdC,EAAMT,EAAMS,IACZC,EAAQV,EAAMU,MACdC,GAAQ,OAAyBX,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,MAAO,UAE1GY,GAA4D,IAAzCd,EAAiBe,QAAQN,GAC5CO,GAAiBF,GAAoBJ,GAAQ,OAAS,CACxDO,gBAAiB,QAASC,OAAOR,EAAO,OACvCE,GAASA,EACZ,OAAoB,gBAAoBH,GAAW,OAAS,CAC1DH,WAAW,OAAKD,EAAQc,KAAMb,EAAWQ,GAAoBT,EAAQe,OAA6C,IAAtC,cAAcL,QAAQN,IAAqBJ,EAAQgB,KAC/HlB,IAAKA,EACLS,MAAOI,EACPL,IAAKG,EAAmBJ,GAASC,OAAMW,GACtCT,GAAQT,EACb,IAEA,KAAe,OA5CK,CAElBe,KAAM,CACJI,QAAS,QACTC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UAItBN,MAAO,CACLO,MAAO,QAITN,IAAK,CAEHO,UAAW,UA2BmB,CAChCC,KAAM,gBADR,CAEG5B,E,oLC1CG6B,GAAYC,E,QAAAA,IAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQ,KAEVC,eAAgB,CACdZ,QAAS,QAEXa,QAAS,CACPC,UAAW,aACXC,SAAU,GAEZlB,MAAO,CACLO,MAAO,IACPO,OAAQ,IACRK,WAAY,GAdkB,IAkDlC,EAhCc,SAAArC,GACZ,IAAMG,EAAUyB,IACRU,EAAStC,EAATsC,KAER,OADAC,QAAQC,IAAIF,GAEV,gBAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtBL,GACCA,EACGM,QAAO,SAAAC,GAAI,OAAIC,QAAQD,EAAKlB,KAAjB,IACXoB,KAAI,SAAAF,GAAI,OACP,gBAACJ,EAAA,EAAD,CAAMO,MAAI,EAACC,IAAKJ,EAAKK,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1C,gBAACC,EAAA,EAAD,CAAMlD,UAAWD,EAAQ4B,MACvB,gBAACwB,EAAA,EAAD,CACEC,KAAMX,EAAKY,IACXC,OAAO,SACPtD,UAAWD,EAAQ8B,gBAEnB,gBAAClC,EAAA,EAAD,CAAWK,UAAWD,EAAQe,MAAOV,MAAOqC,EAAKc,YACjD,gBAACC,EAAA,EAAD,CAAaxD,UAAWD,EAAQ+B,SAC9B,gBAAC2B,EAAA,EAAD,CAAYC,QAAQ,MAAMjB,EAAKlB,MAC/B,gBAACkC,EAAA,EAAD,CAAYC,QAAQ,SACjBjB,EAAKkB,UAAUC,SAAS,GAAGC,YAZ/B,IAqBlB,E,UC7BD,EAnBiB,SAAC,GAAc,IAAZ3B,EAAW,EAAXA,KACVX,EAASW,EAAK4B,OAAOC,aAAaC,KAAlCzC,KACR,OACE,gBAAC0C,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKC,MAAO5C,IACZ,gBAAC6C,EAAA,EAAD,CAAYD,MAAO5C,IACnB,gBAAC8C,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAcpC,KAAMA,EAAK4B,OAAOC,aAAaC,KAAKO,aAAaC,SAEjE,gBAACH,EAAA,EAAD,KACE,gBAACZ,EAAA,EAAD,CAAYC,QAAQ,KAAKe,cAAY,GAArC,WAGA,gBAAC,EAAD,CAAOvC,KAAMA,EAAK4B,OAAOC,aAAaC,KAAKU,QAAQF,SAI1D,C","sources":["webpack://philips-software.github.io/./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack://philips-software.github.io/./src/components/Users.js","webpack://philips-software.github.io/./src/templates/team-page.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: 128,\n  },\n  cardActionArea: {\n    display: 'flex',\n  },\n  content: {\n    alignSelf: 'flex-start',\n    flexGrow: 1,\n  },\n  media: {\n    width: 128,\n    height: 128,\n    flexShrink: 0,\n  },\n}));\n\nconst Users = props => {\n  const classes = useStyles();\n  const { data } = props;\n  console.log(data);\n  return (\n    <Grid container spacing={4}>\n      {data &&\n        data\n          .filter(node => Boolean(node.name))\n          .map(node => (\n            <Grid item key={node.id} xs={12} md={6} lg={4}>\n              <Card className={classes.card}>\n                <CardActionArea\n                  href={node.url}\n                  target=\"_blank\"\n                  className={classes.cardActionArea}\n                >\n                  <CardMedia className={classes.media} image={node.avatarUrl} />\n                  <CardContent className={classes.content}>\n                    <Typography variant=\"h6\">{node.name}</Typography>\n                    <Typography variant=\"body2\">\n                      {node.hovercard.contexts[0].message}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ))}\n    </Grid>\n  );\n};\n\nexport default Users;\n\nexport const query = graphql`\n  fragment User on GitHub_User {\n    id\n    name\n    url\n    avatarUrl\n    hovercard {\n      contexts {\n        message\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport { Typography } from '@material-ui/core';\nimport SEO from '../components/SEO';\nimport PageHeader from '../components/PageHeader';\nimport MainContainer from '../components/MainContainer';\nimport Users from '../components/Users';\nimport Repositories from '../components/Repositories';\n\nconst TeamPage = ({ data }) => {\n  const { name } = data.github.organization.team;\n  return (\n    <Layout>\n      <SEO title={name} />\n      <PageHeader title={name} />\n      <MainContainer>\n        <Repositories data={data.github.organization.team.repositories.nodes} />\n      </MainContainer>\n      <MainContainer>\n        <Typography variant=\"h5\" gutterBottom>\n          Members\n        </Typography>\n        <Users data={data.github.organization.team.members.nodes} />\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default TeamPage;\n\nexport const pageQuery = graphql`\n  query TeamQuery($slug: String!) {\n    github {\n      organization(login: \"philips-software\") {\n        team(slug: $slug) {\n          name\n          members(first: 100) {\n            nodes {\n              ...User\n            }\n          }\n          repositories(first: 100) {\n            nodes {\n              ...Repository\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["MEDIA_COMPONENTS","CardMedia","props","ref","children","classes","className","_props$component","component","Component","image","src","style","other","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","root","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","name","useStyles","makeStyles","theme","card","height","cardActionArea","content","alignSelf","flexGrow","flexShrink","data","console","log","Grid","container","spacing","filter","node","Boolean","map","item","key","id","xs","md","lg","Card","CardActionArea","href","url","target","avatarUrl","CardContent","Typography","variant","hovercard","contexts","message","github","organization","team","Layout","SEO","title","PageHeader","MainContainer","Repositories","repositories","nodes","gutterBottom","members"],"sourceRoot":""}