{"version":3,"file":"component---src-pages-teams-js-eaff56e8895a87e8adf3.js","mappings":"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","sources":["webpack://philips-software.github.io/./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack://philips-software.github.io/./src/components/Teams.js","webpack://philips-software.github.io/./src/pages/teams.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core';\nimport Octicon, { Person, RepoForked } from '@primer/octicons-react';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: theme.spacing(16),\n  },\n  actionArea: {\n    display: 'flex',\n  },\n  media: {\n    height: 128,\n    width: 128,\n    flexShrink: 0,\n  },\n  content: {\n    flexGrow: 1,\n    display: 'flex',\n    alignSelf: 'stretch',\n  },\n  text: {\n    flexGrow: 1,\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    fontSize: 18,\n    lineHeight: '1.1em',\n  },\n  meta: {\n    alignSelf: 'flex-end',\n    flexShrink: 0,\n  },\n}));\n\nconst Teams = props => {\n  const classes = useStyles();\n  const { data } = props;\n  return (\n    <Grid container spacing={4}>\n      {data &&\n        data\n          .filter(node => node.repositories.totalCount > 0)\n          .map(node => (\n          <Grid item xs={12} md={6} lg={4} key={node.id}>\n            <Card className={classes.card}>\n              <CardActionArea\n                className={classes.actionArea}\n                to={`/teams/${node.slug}`}\n                component={Link}\n              >\n                <CardMedia image={node.avatarUrl} className={classes.media} />\n                <CardContent className={classes.content}>\n                  <div className={classes.text}>\n                    <Typography variant=\"h6\" className={classes.title}>\n                      {node.name}\n                    </Typography>\n                    <Typography variant=\"subtitle2\">\n                      {node.description}\n                    </Typography>\n                  </div>\n                  <div className={classes.meta}>\n                    <div>\n                      <Octicon icon={RepoForked} />{' '}\n                      {node.repositories.totalCount}\n                    </div>\n                    <div>\n                      <Octicon icon={Person} /> {node.members.totalCount}\n                    </div>\n                  </div>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        ))}\n    </Grid>\n  );\n};\n\nexport default Teams;\n\nexport const query = graphql`\n  fragment Team on GitHub_Team {\n    id\n    slug\n    name\n    members {\n      totalCount\n    }\n    description\n    repositories {\n      totalCount\n    }\n    avatarUrl\n  }\n`;\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport { graphql } from 'gatsby';\nimport SEO from '../components/SEO';\nimport PageHeader from '../components/PageHeader';\nimport MainContainer from '../components/MainContainer';\nimport Teams from '../components/Teams';\n\nconst ReposPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Teams\" />\n      <PageHeader title=\"Teams\" />\n      <MainContainer>\n        <Teams data={data.github.organization.teams.nodes} />\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  {\n    github {\n      organization(login: \"philips-software\") {\n        teams(first: 100, privacy: VISIBLE) {\n          nodes {\n            ...Team\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ReposPage;\n"],"names":["MEDIA_COMPONENTS","CardMedia","props","ref","children","classes","className","_props$component","component","Component","image","src","style","other","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","root","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","name","useStyles","makeStyles","theme","card","height","spacing","actionArea","flexShrink","content","flexGrow","alignSelf","text","marginRight","title","fontSize","lineHeight","meta","data","Grid","container","filter","node","repositories","totalCount","map","item","xs","md","lg","key","id","Card","CardActionArea","to","slug","Link","avatarUrl","CardContent","Typography","variant","description","icon","RepoForked","Person","members","Layout","SEO","PageHeader","MainContainer","github","organization","teams","nodes"],"sourceRoot":""}